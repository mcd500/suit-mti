<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.26 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-ietf-suit-mti" category="std" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="MTI SUIT Algorithms">Mandatory-to-Implement Algorithms for Authors and Recipients of Software Update for the Internet of Things manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>brendan.moran.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Ø." surname="Rønningstad" fullname="Øyvind Rønningstad">
      <organization>Nordic Semiconductor</organization>
      <address>
        <email>oyvind.ronningstad@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Tsukamoto" fullname="Akira Tsukamoto">
      <organization>Openchip &amp; Software Technologies, S.L.</organization>
      <address>
        <email>akira.tsukamoto@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="March" day="02"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies algorithm profiles for SUIT manifest parsers and authors to ensure better interoperability. These profiles apply specifically to a constrained node software update use case.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Mandatory algorithms may change over time due to an evolving threat landscape. Algorithms are grouped into algorithm profiles to account for this. Profiles may be deprecated over time. SUIT will define five choices of MTI profile specifically for constrained node software update. These profiles are:</t>

<t><list style="symbols">
  <t>One Symmetric MTI profile</t>
  <t>Two "Current" Constrained Asymmetric MTI profiles</t>
  <t>Two "Current" AEAD Asymmetric MTI profiles</t>
  <t>One "Future" Constrained Asymmetric MTI profile</t>
</list></t>

<t>At least one MTI algorithm in each category MUST be FIPS qualified.</t>

<t>Because SUIT presents an asymmetric communication profile, with powerful/complex manifest authors and constrained manifest recipients, the requirements for Recipients and Authors are different.</t>

<t>Recipients MAY choose which MTI profile they wish to implement. It is RECOMMENDED that they implement the "Future" Asymmetric MTI profile. Recipients MAY implement any number of other profiles. Recipients MAY choose not to implement an encryption algorithm if encrypted payloads will never be used.</t>

<t>Authors MUST implement all MTI profiles. Authors MAY implement any number of other profiles.</t>

<t>AEAD is preferred over un-authenticated encryption. Where possible an AEAD profile SHOULD be selected. Certain constrained IoT applications require streaming decryption, which necessitates a non-AEAD ecryption algorithm. If the application is not a constrained device, the two AEAD profiles are RECOMMENDED.</t>

<t>Other use-cases of SUIT MAY define their own MTI algorithms.</t>

</section>
<section anchor="algorithms"><name>Algorithms</name>

<t>The algorithms that form a part of the profiles defined in this document are grouped into:</t>

<t><list style="symbols">
  <t>Digest Algorithms</t>
  <t>Authentication Algorithms</t>
  <t>Key Exchange Algorithms (OPTIONAL)</t>
  <t>Encryption Algorithms (OPTIONAL)</t>
</list></t>

</section>
<section anchor="profiles"><name>Profiles</name>

<t>Recognized profiles are defined below.</t>

<section anchor="suit-sha256-hmac-a128kw-a128ctr"><name> Symmetric MTI profile: suit-sha256-hmac-a128kw-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HMAC-256</c>
      <c>5</c>
      <c>Key Exchange</c>
      <c>A128KW Key Wrap</c>
      <c>-3</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128ctr"><name>Current Constrained Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-a128ctr"><name>Current Constrained Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128gcm"><name>Current AEAD Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128gcm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128GCM</c>
      <c>1</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-chacha-poly"><name>Current AEAD Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-chacha-poly</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>ChaCha20/Poly1305</c>
      <c>24</c>
</texttable>

</section>
<section anchor="suit-sha256-hsslms-a256kw-a256ctr"><name>Future Constrained Asymmetric MTI Profile 1: suit-sha256-hsslms-a256kw-a256ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HSS-LMS</c>
      <c>-46</c>
      <c>Key Exchange</c>
      <c>A256KW</c>
      <c>-5</c>
      <c>Encryption</c>
      <c>A256CTR</c>
      <c>-65532</c>
</texttable>

<t>This draft does not specify a particular set of HSS-LMS parameters. Deep trees are RECOMMENDED due to key lifetimes in IoT devices.</t>

</section>
</section>
<section anchor="reporting-profiles"><name>Reporting Profiles</name>

<t>When using reverse-direction communication, particularly data structures that are designed for reporting of update capabilities, status, progress, or success, the same profile as the is used on the SUIT manifest SHOULD be used. There are cases where this is not possible, such as suit-sha256-hsslms-a256kw-a256ctr. In this case, the closest equivalent profile SHOULD be used, for example suit-sha256-es256-ecdh-a128ctr.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>For the avoidance of doubt, there are scenarios where payload or manifest encryption are not required. In these scenarios, the encryption element of the selected profile is simply not used.</t>

<t>AES-CTR mode is specified, see <xref target="RFC9459"/>. All of the AES-CTR security considerations in <xref target="RFC9459"/> apply. A non-AEAD encryption mode is specified in this draft due to the following mitigating circumstances:</t>

<t><list style="symbols">
  <t>Streaming decryption must be supported. Therefore, there is no difference between AEAD and plaintext hash verification.</t>
  <t>Out-of-order decryption must be supported. Therefore, we must use a stream cipher that supports random access.</t>
  <t>There are no chosen plaintext attacks: the plaintext is authenticated prior to encryption.</t>
  <t>Content Encryption Keys must be used to encrypt only once. See <xref target="I-D.ietf-suit-firmware-encryption"/>.</t>
</list></t>

<t>As a result of these mitigating circumstances, AES-CTR is the most appropriate cipher for typical software/firmware delivery scenarios.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA is requested to create a page for COSE Algorithm Profiles within
the category for Software Update for the Internet of Things (SUIT)</t>

<t>IANA is also requested to create a registry for COSE Alforithm Profiles
within this page. The initial content of the registry is:</t>

<texttable>
      <ttcol align='left'>Profile</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Digest</ttcol>
      <ttcol align='left'>Auth</ttcol>
      <ttcol align='left'>Key Exchange</ttcol>
      <ttcol align='left'>Encryption</ttcol>
      <ttcol align='left'>Descriptor Array</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>suit-sha256-hmac-a128kw-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>5</c>
      <c>-3</c>
      <c>-65534</c>
      <c>[-16,   5,  -3, -65534]</c>
      <c><xref target="suit-sha256-hmac-a128kw-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-29</c>
      <c>-65534</c>
      <c>[-16,  -7, -29, -65534]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-29</c>
      <c>-65534</c>
      <c>[-16,  -8, -29, -65534]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128gcm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-29</c>
      <c>1</c>
      <c>[-16,  -7, -29,      1]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128gcm"/></c>
      <c>suit-sha256-eddsa-ecdh-chacha-poly</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-29</c>
      <c>24</c>
      <c>[-16,  -8, -29,     24]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-chacha-poly"/></c>
      <c>suit-sha256-hsslms-a256kw-a256ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-46</c>
      <c>-5</c>
      <c>-65532</c>
      <c>[-16, -46,  -5, -65532]</c>
      <c><xref target="suit-sha256-hsslms-a256kw-a256ctr"/></c>
</texttable>

<t>New entries to this registry require standards action.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8152'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='July' year='2017'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8152'/>
  <seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>

<reference anchor='RFC8778'>
  <front>
    <title>Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <date month='April' year='2020'/>
    <abstract>
      <t>This document specifies the conventions for using the Hierarchical Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based signature algorithm with the CBOR Object Signing and Encryption (COSE) syntax. The HSS/LMS algorithm is one form of hash-based digital signature; it is described in RFC 8554.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8778'/>
  <seriesInfo name='DOI' value='10.17487/RFC8778'/>
</reference>

<reference anchor='RFC9052'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='96'/>
  <seriesInfo name='RFC' value='9052'/>
  <seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>

<reference anchor='RFC9459'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): AES-CTR and AES-CBC</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <author fullname='H. Tschofenig' initials='H.' surname='Tschofenig'/>
    <date month='September' year='2023'/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) data format is designed for small code size and small message size. CBOR Object Signing and Encryption (COSE) is specified in RFC 9052 to provide basic security services using the CBOR data format. This document specifies the conventions for using AES-CTR and AES-CBC as content encryption algorithms with COSE.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9459'/>
  <seriesInfo name='DOI' value='10.17487/RFC9459'/>
</reference>


<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         </author>
      <author fullname='Henk Birkholz' initials='H.' surname='Birkholz'>
         <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg' initials='K.' surname='Zandberg'>
         <organization>Inria</organization>
      </author>
      <author fullname='Øyvind Rønningstad' initials='O.' surname='Rønningstad'>
         <organization>Nordic Semiconductor</organization>
      </author>
      <date day='24' month='February' year='2025'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an Internet of Things (IoT) device), where to find
   the code/data, the devices to which it applies, and cryptographic
   information protecting the manifest.  Software updates and Trusted
   Invocation both tend to use sequences of common operations, so the
   manifest encodes those sequences of operations, rather than declaring
   the metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-33'/>
   
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-firmware-encryption'>
   <front>
      <title>Encrypted Payloads in SUIT Manifests</title>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>University of Applied Sciences Bonn-Rhein-Sieg</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='David Brown' initials='D.' surname='Brown'>
         <organization>Linaro</organization>
      </author>
      <author fullname='Ken Takayama' initials='K.' surname='Takayama'>
         <organization>SECOM CO., LTD.</organization>
      </author>
      <date day='29' month='January' year='2025'/>
      <abstract>
	 <t>   This document specifies techniques for encrypting software, firmware,
   machine learning models, and personalization data by utilizing the
   IETF SUIT manifest.  Key agreement is provided by ephemeral-static
   (ES) Diffie-Hellman (DH) and AES Key Wrap (AES-KW).  ES-DH uses
   public key cryptography while AES-KW uses a pre-shared key.
   Encryption of the plaintext is accomplished with conventional
   symmetric key cryptography.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-firmware-encryption-23'/>
   
</reference>


<reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022"/>
  </front>
</reference>


    </references>


<section anchor="full-cddl"><name>A. Full CDDL</name>

<t>The following CDDL creates a subset of COSE for use with SUIT. Both tagged and untagged messages are defined. SUIT only uses tagged COSE messages, but untagged messages are also defined for use in protocols that share a ciphersuite with SUIT.</t>

<t>To be valid, the following CDDL MUST have the COSE CDDL appended to it. The COSE CDDL can be obtained by following the directions in <xref section="1.4" sectionFormat="comma" target="RFC9052"/>.</t>

<figure><sourcecode type="CDDL"><![CDATA[
SUIT_COSE_tool_tweak /= suit-sha256-hmac-a128kw-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-chacha-poly
SUIT_COSE_tool_tweak /= suit-sha256-hsslms-a256kw-a256ctr
SUIT_COSE_tool_tweak /= SUIT_COSE_Profiles

SUIT_COSE_Profiles /= SUIT_COSE_Profile_HMAC_A128KW_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_ES256_ECDH_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_EDDSA_ECDH_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_ES256_ECDH_A128GCM
SUIT_COSE_Profiles /= SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304
SUIT_COSE_Profiles /= SUIT_COSE_Profile_HSSLMS_A256KW_A256CTR

suit-sha256-hmac-a128kw-a128ctr    = [-16, 5, -3, -65534]
suit-sha256-es256-ecdh-a128ctr     = [-16, -7, -29, -65534]
suit-sha256-eddsa-ecdh-a128ctr     = [-16, -8, -29, -65534]
suit-sha256-es256-ecdh-a128gcm     = [-16, -7, -29, 1]
suit-sha256-eddsa-ecdh-chacha-poly = [-16, -8, -29, 24]
suit-sha256-hsslms-a256kw-a256ctr  = [-16, -46, -5, -65532]

SUIT_COSE_Profile_HMAC_A128KW_A128CTR = SUIT_COSE_Profile<5, -65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128CTR = SUIT_COSE_Profile<-7,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_A128CTR = SUIT_COSE_Profile<-8,-65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128GCM = SUIT_COSE_Profile<-7,1> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304 = SUIT_COSE_Profile<-8,24> .and COSE_Messages
SUIT_COSE_Profile_HSSLMS_A256KW_A256CTR = SUIT_COSE_Profile<-46,-65532> .and COSE_Messages

SUIT_COSE_Profile<authid, encid> = SUIT_COSE_Messages<authid,encid>

SUIT_COSE_Messages<authid, encid> = SUIT_COSE_Untagged_Message<authid, encid> /
    SUIT_COSE_Tagged_Message<authid, encid> 
      
SUIT_COSE_Untagged_Message<authid, encid> = SUIT_COSE_Sign<authid> /
    SUIT_COSE_Sign1<authid> / SUIT_COSE_Encrypt<encid> / 
    SUIT_COSE_Encrypt0<encid> / SUIT_COSE_Mac<authid> /
    SUIT_COSE_Mac0<authid> 

SUIT_COSE_Tagged_Message<authid, encid> = SUIT_COSE_Sign_Tagged<authid> /
    SUIT_COSE_Sign1_Tagged<authid> / SUIT_COSE_Encrypt_Tagged<encid> /
    SUIT_COSE_Encrypt0_Tagged<encid> / SUIT_COSE_Mac_Tagged<authid> /
    SUIT_COSE_Mac0_Tagged<authid>

; Note: This is not the same definition as is used in COSE.
; It restricts a COSE header definition further without
; repeating the COSE definition. It should be merged
; with COSE by using the CDDL .and operator.
SUIT_COSE_Profile_Headers<algid> = (
    protected : bstr .cbor SUIT_COSE_alg_map<algid>,
    unprotected : SUIT_COSE_header_map
)
SUIT_COSE_alg_map<algid> = {
    1 => algid,
    * int => any
}

SUIT_COSE_header_map = {
    * int => any
}

SUIT_COSE_Sign_Tagged<authid> = #6.98(SUIT_COSE_Sign<authid>)


SUIT_COSE_Sign<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signatures : [+ SUIT_COSE_Signature<authid>]
]


SUIT_COSE_Signature<authid> =  [
    SUIT_COSE_Profile_Headers<authid>,      
    signature : bstr
]


SUIT_COSE_Sign1_Tagged<authid> = #6.18(SUIT_COSE_Sign1<authid>)


SUIT_COSE_Sign1<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signature : bstr
]


SUIT_COSE_Encrypt_Tagged<encid> = #6.96(SUIT_COSE_Encrypt<encid>)


SUIT_COSE_Encrypt<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_recipient<encid> = [    
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    ? recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_Encrypt0_Tagged<encid> = #6.16(SUIT_COSE_Encrypt0<encid>)


SUIT_COSE_Encrypt0<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
]


SUIT_COSE_Mac_Tagged<authid> = #6.97(SUIT_COSE_Mac<authid>)


SUIT_COSE_Mac<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
   recipients :[+SUIT_COSE_recipient<authid>]
]


SUIT_COSE_Mac0_Tagged<authid> = #6.17(SUIT_COSE_Mac0<authid>)


SUIT_COSE_Mac0<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
]
]]></sourcecode></figure>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA9Va3W7bRha+51MMGmCRpKZsKXbiaJvuKrbTGI3jwHJQFG1g
jMiRNGuSw5JDK2qcPkcv9zH2evti+52Z4Y9EynaCpsAahi1xzpw5853/I/m+
72mpIzFkJzwJuVbZ0tfKP47TSMQi0WwUzVQm9TzO2VRlbFToucpyBmJ2JgKZ
ShDlTE3ZWE31gmeCvU3BRxhqPRfsONEiS4QmmvO5TGY5i3kipyLXuccnk0xc
4fDzYzZ+e3zeOM4LVZDwGJKFGZ9qXwo99fNCaj/W0gtwBCiXQ5br0PNwLh+y
sQgKbF56C5VdzjJVpEPD1bsUSzwKh5Uw/iHx9DyZZkOmsyLXg52dpzsDzwtU
koskL/IhS5Tn5Ro3veCRSiDIUuReKoceY9k0EGGul5F7yphWQeOlTELgUj7I
VaYzMc2r98t45a3OZFARByom4KtVmUQyqY8R77UfyVz7YDJREch89fBrrACu
mKcpAG7IcRGJK0FEu8DIqA7S+1ijH5lg4XmPnaiMJ+6ZRfx5JmAMycqKymZQ
269cS5UM2SiL2SsZSy1Cty5iLqMhm9itvZi29khp/5zRSg/3Wjv6j9977OyP
/yQJGYXm4YoIf/y+vJJkZG2CVUleQ7EygO5jCd2FRQAbXhVJGU69TFWMNoo0
6rHzvLjksdJqRZzRpcx4a21VktNUJMFcpuxvtTOci2CeqEjNpMi32Lj3qrcq
Gye+PV3ybQjmJSqLwflKkMGdvTjY7+8NypdPnuy7l0938BRGkwv3fnfvKd7r
LJgEeHLsH/YanuMcbwjLT6ZN/qt0U5nFJL6PC2XL1FyPiEavR/7B6fhoaC7h
AsdXB89Pz9jp5F8i0GwsZwSyiQ9H1WZ2n3Y9+Mpsq+wQPxQphmywMxhYjjyb
CXjCXOs0H25vLxaLnuQJ7wHobZ7nYG58Y5vua/703s91HHme7/uMT+BJPIBb
I87k5BCFCWF5ikA1hQIYL6MLSzM1lZGwQc1EnhIblvIsFy7EcRfutGIUFKDQ
idAIIbAW/FWpyPhERgg5sJu5yEXNF64YLcujAx7hDZhwRvEFUsKlQwSYUCA4
OFMpbNwswCXguJm9VCzDMBKed49R8MoUGTgQ9bwqXte3osi6ZMGcJzPB1BXE
1DIWLCyEOTth4kpFV6QePUfA1CwCjzzgqeg14zwJY6InRMQ9VRds9DQIVAF4
baCXeY+9KVdJjAkOFmkmKFKHtTQ9i/ZCRhHWp8CBTWGDkFrJQJhMQsnAHbQK
IJ10G35tRWQwcO8hO8VJ4yViK0Xb5hlYO18omHGRIXbpr9hB44hR3rUlb+0Z
HY0ObyCmw796UWhY0F34e94IyhEc1ojEY1ZqHUjokQdzVqZAdvJ2fE5wvzh+
M2a/FDwiYw9hP88BPpmTQRyqyE2uhh3w+lRKN0UCgI2fuvO3oB89Z6laiGxa
RPA0qgfe1z7CG2VAUyMVQVbVBlumCsjEL4XMTElhfa5RPBCTqq6AIkM5nQqC
FVdokJ2MfiQrgdOzxVwCgKad4IwlhM7nZJmyrF567FgzhIKzo4PTk5Oj14dH
h6CE4RvyisxIWKmnWyU9tiZKvZsnS5YU8QQWDutVYJZVum9tczdIlF6R1Hhn
HS8b2p6WzwFvypeR4mFu3ScR5FQTEzJI3SWGxh4anEHaNMdeBfYnXAPcycKB
JewI2slKny4Sn4wBDKT19PoWPfYDeMAVFSL3BErCHQ2XUmnjl6dvXx3SDXIR
IXvgFuxAZBq2tGJVx+rcxFNnpXlpTVQ5CR5TQAtFeeqWs45EIJzkUkMomBUA
T3xzuGiDDDOZGhtoHEJXJSWtRuxQXCFKWZPWCADN61jjbZgaQDs1KEI/PoV0
WyeTMxLyLvqBQgLxRbLq5gT5vWY5jKQmmqHe2DHlcIiIlGXqaxKrksbypxBu
wnOdD9fjuwmPh3JGfts48KGxE6dYQmRl7Xs40NF7l2sayeP+6Zvz49PXo1cP
QNSoALpJcMUyaRhfV6gefiVDb0JaXmQiIrUgWO7999+dkRzNAFUv+ZwP9h77
85gHPu8P9i8X5h9qIvbh3i0UHz3vupaVnS9TwZoPrhlVMub21971s8YP3pYg
XsOyRz5OwCu//5go17G8Zi9PRgeOZs9QrCCKDRDo+x/M0x8ynhKrR4auAaql
Ojg/o9XHe3uPdkEBfJjLSzelGoc766+iJnLzNwjnG0BrE/x1mB2NHcGTLsSO
Dg5f+kdj9nWJHQgHT78EZoM1zMIw5zdi1iL4CzE7PByPiGD/C2LWVf7czcBm
QXyzgYHg/9HAvjs4wav+J+C02aggAH79VKEG3mhYDaL/N+M6mHP8Dna230D4
/qMdxEM2MCZG2Nm67DNC2TzPozj36TUFePzrSAFdNH9hEhiP/VcnYyLZfdyZ
BcDAArfXYWdYbDjlgBCzrS9Nt5Dwha1hbBO1dIWCDIqIZyi5TMlQSoAVDkjR
+PbYoRApQ2nVLmnKXvISUqLNENTR5VRhUIlmiyNbuJyJVOEoVGZ1fkc1mKAW
oocZla6oikJUcaafXe1DthqCwubR13Gq9dD6whJc6WMrAxoJwCCoo8iqI3Et
10yjt7UNuhm/5CgGC/xHuTADH7zCtrwIAvOaiqccGFTlKc/NM+BJBTY6MfN2
dVhQl7CmCKfmE3KRbLbgW5j3pv5yBWVZDW/RyXM65FZ7RH3qajhiaiUNIrQR
EIAq4SseUXBpl9Uk05YBR7znVOjfkuqN6sopqvE4GYrMFt2e98JNdPmVkiFP
AkFAh6qYaCOSu3ceiIRnUpV3dz0LQV2h1ux0MtsMuZI+dHelFr7iZG/c2CRc
y+JK3rJ7qBAAUjk1NkvDumyPjsY+eUtMUwOicGMhIJQLwT588O3U7ONHmoZE
JfNyW17CEqzAQsbf2GrnPmDQaDhquVtH18W59VjrXXTsVEWodsmaY1jvjBvD
DmSGGp5m0jBZU7aPOzogFhfAmLqqIiWXqOwShiBKVRlrrFrtwAy2FkK4Do1a
8jTiNOV6r9mco6+Gw5pBjOnsaKRRaF9NfZUBirsfvhCWgMYS3PVvuFZKbZJx
a7cNPR5kUDFNmeCddGDtWhAcbXQOYWsZudY8uMyHtgeqHuOaq+1pCoPK7Dyv
6lPBHLauyaIa8RWROK9uYyJAvQvBAMalgFsP/kLGc+sAFWYFG6RWFKGniErj
BQ6bFLxV2Z60kShWNHpJYeW4hQlvFjgzgVumNCWrxmHbpQjQTSShvGXtT8bN
aZjbcnHzUNoGG45q7xzQrFCY7DGzn+uY9Ffnw2ruR1MjmXgmPpXTKTNgvftn
Q/cpvj5gtSg8ytUGeTIxkzChZVOm6ZpMnpXJehldwJgj/A6gA67A6d05e8VR
kntdV5UFkrnJHayR3imZs3bN00zQhyIPMplq+uAsyzjKBSRG53C2cKCcflvT
ip9rdjJ6fTg6Pz37sSwn0DUy2xQ2inL2809Y3MLKHv74j7bcys/vsPbhw23N
78c1aTqawU3SoGIuy7u2NP6TLVq6QZqOrrIlTLvL2ijM/k3C7N8qTLtduwUZ
6mLugkyfObIWMuanfzsy1A7dgEyzVbgNGZTYa8LsN4QZ3IJMs99YF6i78u4W
aPexrW4bVWwpENZIqj2nqkGXFXfW7yjgX4sFgjVaBPthhXH/yrvr+SF9iJKF
iDKBzQTmM5cJMomZvvXQfKASODg8fIW+YYrXfhCG0Uc7jKtTtCGwYYkCfF5M
XHVtghJFJ8p3ZqZO4a3Hniu81Hw2Q0SjXFsk7g3K6RxBamXw5T4yMSmnoKLS
0Rrm5YYtNin0Bj4mhJZTtFIaaab9WgUqchU1ICVil1UI5abMuLOiTIhiU4Zb
azWKAcDMnef8ysw0rXTmOTKWSEIbu6W28bdeDXhCbNVE295usmzwJUZVj1DV
WoqK4LFrHPq9XZNaf/vtN8PQI2kviP+FViq6QFXDL9n2s9vC7J32tcPU3ba1
AsrnnAbX/9TTGk56N1y63Gnjzvp53eS1n3VSXtD488KOBS7ccOnOe82U5oKm
C5++lQYWn7l19dTvDk4+59SDlyP8DnYu3py++rH/aGf37oiNx2jUL+xE4ML1
/p53h+rhGbPxlAJpVRK88+6Q6cudawl8bW93Yq727t+0tzuPts7tbzyymfFa
Rw7WjtuQmKp9lHDqfPOuw5y7DJd1qOubksvut6xHId4snriw3MG3bdSdbIHI
p7FtGXw32/1PZNtyhk3S9j9d0JaPbBJ5cFdxO32nmytMwGq/k3Wb9zfUX1JG
RFEvw29XmJbbShpL0mSyTtHF5a1L6iXxOu22+e5MTX9+I7X7/pF3d/5NWej7
PW69fTAt9uvVxorrir4pJWZrO936Tk3QgIgHG0/E2k612MT1ZgzWb+TIb75Y
i6gtf0myQTHlLdfJVi90mzB05zUaz/s7e63oq1TnjUljNdA0pZ+047a8mmei
mCJ+Pew9pvmb/Roi1a+mOJsLbic71d5pkZmPs6kmVIXGvkykwg4uqoqvpjdf
vshBGdFHt6hIM0iMTaakNLSTpRsHm91UDBqPM1+rQs/c63JkIxXcJZpZRd43
6FAla0eAQ0bfAmO9YOK+2GX3g/4i5qnbt2U2FUlzW01rb07k3gNvEwsc/cFw
6bNn3zLzzHJ9SJ+pm2fJ0vvYtMmab7V5M3GXWT5j9x73nu7f73bHB976/sbG
n9aMqIWnpbRXKEe2DsttlsjIrtC4ndsh/JD99PWai5iVktU7711LoBUCSHVn
sVzMWhHBiddxTMtVDXD9deD6m5Hrf0HouuXujiBW44/vb4qkD7p41JtvE90S
Wvls12eGpm3h669zGb3XHKsFx2td6+vrJFSlyj9BsH98vmgborG1lQ7Id27C
fOdPBn1V1I6sYC3jyf0Vom6DbiZQJ96neNxGk0bV4B6at01FdOthQ2ToSGhO
C2vX29l4v50vfsF3NGDw/gcsVFWKMDEAAA==

-->

</rfc>

