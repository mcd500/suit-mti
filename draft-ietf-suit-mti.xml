<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 3.2.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="trust200902" docName="draft-ietf-suit-mti" category="std" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="MTI SUIT Algorithms">Mandatory-to-Implement Algorithms for Authors and Recipients of Software Update for the Internet of Things manifests</title>

    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>brendan.moran.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="Ø." surname="Rønningstad" fullname="Øyvind Rønningstad">
      <organization>Nordic Semiconductor</organization>
      <address>
        <email>oyvind.ronningstad@gmail.com</email>
      </address>
    </author>
    <author initials="A." surname="Tsukamoto" fullname="Akira Tsukamoto">
      <organization>Openchip &amp; Software Technologies, S.L.</organization>
      <address>
        <email>akira.tsukamoto@gmail.com</email>
      </address>
    </author>

    <date year="2025" month="March" day="17"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document specifies cryptographic algorithm profiles to be used with the SUIT manifest (see draft-ietf-suit-manifest).  These are the mandatory-to-implement algorithms to ensure interoperability.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>This document specifies algorithm profiles for SUIT manifest parsers and authors to ensure better interoperability. These profiles apply specifically to a constrained node software update use case. Mandatory algorithms may change over time due to an evolving threat landscape. Algorithms are grouped into algorithm profiles to account for this. Profiles may be deprecated over time. SUIT will define five choices of Mandatory To Implement (MTI) profile specifically for constrained node software update. These profiles are:</t>

<t><list style="symbols">
  <t>One Symmetric MTI profile</t>
  <t>Two "Current" Constrained Asymmetric MTI profiles</t>
  <t>Two "Current" AEAD Asymmetric MTI profiles</t>
  <t>One "Future" Constrained Asymmetric MTI profile</t>
</list></t>

<t>At least one MTI algorithm in each category MUST be FIPS qualified.</t>

<t>Because SUIT presents an asymmetric communication profile, where manifest authors have unlimited resources and manifest recipients have constrained resources, the requirements for Recipients and Authors are different.</t>

<t>Recipients MAY choose which MTI profile they wish to implement. It is RECOMMENDED that they implement the "Future" Asymmetric MTI profile. Recipients MAY implement any number of other profiles. Recipients MAY choose not to implement an encryption algorithm if encrypted payloads will never be used.</t>

<t>Authors MUST implement all MTI profiles. Authors MAY implement any number of other profiles.</t>

<t>This draft makes use of AES-CTR in COSE (<xref target="RFC9459"/>), which is Deprecated. AES-CTR is used because it enables out-of-order reception and decryption of blocks, which is necessary for some constrained node use cases. Out-of-order reception with on-the-fly decryption is not available in the prefered encryption algorithms.
Authenticated Encryption with Additional Data (AEAD) is preferred over un-authenticated encryption and an AEAD profile SHOULD be selected wherever possible. See Security Considerations in this draft (<xref target="aes-ctr-payloads"/>) and in <xref target="RFC9459"/> (Section 8) for additional details on the considerations for the use of AES-CTR.</t>

<t>Other use-cases of the SUIT Manifest (<xref target="I-D.ietf-suit-manifest"/>) MAY define their own MTI algorithms.</t>

</section>
<section anchor="algorithms"><name>Algorithms</name>

<t>The algorithms that form a part of the profiles defined in this document are grouped into:</t>

<t><list style="symbols">
  <t>Digest Algorithms</t>
  <t>Authentication Algorithms</t>
  <t>Key Exchange Algorithms (OPTIONAL)</t>
  <t>Encryption Algorithms (OPTIONAL)</t>
</list></t>

</section>
<section anchor="profiles"><name>Profiles</name>

<t>Recognized profiles are defined below.</t>

<section anchor="suit-sha256-hmac-a128kw-a128ctr"><name> Symmetric MTI profile: suit-sha256-hmac-a128kw-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HMAC-256</c>
      <c>5</c>
      <c>Key Exchange</c>
      <c>A128KW Key Wrap</c>
      <c>-3</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128ctr"><name>Current Constrained Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-a128ctr"><name>Current Constrained Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-a128ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128CTR</c>
      <c>-65534</c>
</texttable>

</section>
<section anchor="suit-sha256-es256-ecdh-a128gcm"><name>Current AEAD Asymmetric MTI Profile 1: suit-sha256-es256-ecdh-a128gcm</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>ES256</c>
      <c>-7</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>A128GCM</c>
      <c>1</c>
</texttable>

</section>
<section anchor="suit-sha256-eddsa-ecdh-chacha-poly"><name>Current AEAD Asymmetric MTI Profile 2: suit-sha256-eddsa-ecdh-chacha-poly</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>EDDSA</c>
      <c>-8</c>
      <c>Key Exchange</c>
      <c>ECDH-ES + A128KW</c>
      <c>-29</c>
      <c>Encryption</c>
      <c>ChaCha20/Poly1305</c>
      <c>24</c>
</texttable>

</section>
<section anchor="suit-sha256-hsslms-a256kw-a256ctr"><name>Future Constrained Asymmetric MTI Profile 1: suit-sha256-hsslms-a256kw-a256ctr</name>

<texttable>
      <ttcol align='left'>Algorithm Type</ttcol>
      <ttcol align='left'>Algorithm</ttcol>
      <ttcol align='left'>COSE Key</ttcol>
      <c>Digest</c>
      <c>SHA-256</c>
      <c>-16</c>
      <c>Authentication</c>
      <c>HSS-LMS</c>
      <c>-46</c>
      <c>Key Exchange</c>
      <c>A256KW</c>
      <c>-5</c>
      <c>Encryption</c>
      <c>A256CTR</c>
      <c>-65532</c>
</texttable>

<t>This draft does not specify a particular set of HSS-LMS parameters. Deep trees are RECOMMENDED due to key lifetimes in IoT devices.</t>

</section>
</section>
<section anchor="reporting-profiles"><name>Reporting Profiles</name>

<t>When using Manifest Recipients Response communication, particularly data structures that are designed for reporting of update capabilities, status, progress, or success, the same profile as the is used on the SUIT manifest SHOULD be used. There are cases where this is not possible, such as suit-sha256-hsslms-a256kw-a256ctr. In this case, the closest equivalent profile SHOULD be used, for example suit-sha256-es256-ecdh-a128ctr.</t>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>Payload encryption is predominantly to protect user data, such as personalisation data, in transit (<xref target="RFC8890"/>). It can also serve to protect Intellectual Property in transit.</t>

<section anchor="payload-encryption-as-a-cybersecurity-defense"><name>Payload encryption as a cybersecurity defense</name>

<t>To define the purpose of payload encryption as a defensive cybersecurity tool, it is important to define the capabilities of modern threat actors. A variety of capabilities are possible:</t>

<t><list style="symbols">
  <t>find bugs by binary code inspection</t>
  <t>send unexpected data to communication interfaces, looking for unexpected behavior</t>
  <t>use fault injection to bypass or manipulate code</t>
  <t>use communication attacks or fault injection along with gadgets found in the code</t>
</list></t>

<t>Given this range of capabilities, it is important to understand which capabilities are impacted by firmware encryption. Threat actors who find bugs by manual inspection or use gadgets found in the code will need to first extract the code from the target. In the IoT context, it is expected that most threat actors will start with sample devices and physical access to test attacks.</t>

<t>Due to these factors, payload encryption serves to limit the pool of attackers to those who have the technical capability to extract code from physical devices and those who perform code-free attacks.</t>

</section>
<section anchor="aes-ctr-payloads"><name>Use of AES-CTR in payload encryption</name>

<t>AES-CTR mode with a digest is specified, see <xref target="RFC9459"/>. All of the AES-CTR security considerations in <xref target="RFC9459"/> apply. A non-AEAD encryption mode is specified in this draft due to the following mitigating circumstances:</t>

<t><list style="symbols">
  <t>Out-of-order decryption must be supported. Therefore, we must use a stream cipher that supports random access.</t>
  <t>Chosen plaintext attacks are extremely difficult to achieve, since the payloads are typically constructed in a relatively secure environment--the developer's computer or build infrastructure--and should be signed in an air-gapped or similarly protected environment. In short, the plaintext is authenticated prior to encryption.</t>
  <t>Content Encryption Keys must be used to encrypt only once. See <xref target="I-D.ietf-suit-firmware-encryption"/>.</t>
</list></t>

<t>As a result of these mitigating circumstances, AES-CTR is an acceptable cipher for typical software/firmware delivery scenarios.</t>

</section>
</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>IANA is requested to create a page for COSE Algorithm Profiles within
the category for Software Update for the Internet of Things (SUIT)</t>

<t>IANA is also requested to create a registry for COSE Alforithm Profiles
within this page. The initial content of the registry is:</t>

<texttable>
      <ttcol align='left'>Profile</ttcol>
      <ttcol align='left'>Status</ttcol>
      <ttcol align='left'>Digest</ttcol>
      <ttcol align='left'>Auth</ttcol>
      <ttcol align='left'>Key Exchange</ttcol>
      <ttcol align='left'>Encryption</ttcol>
      <ttcol align='left'>Descriptor Array</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>suit-sha256-hmac-a128kw-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>5</c>
      <c>-3</c>
      <c>-65534</c>
      <c>[-16,   5,  -3, -65534]</c>
      <c><xref target="suit-sha256-hmac-a128kw-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-29</c>
      <c>-65534</c>
      <c>[-16,  -7, -29, -65534]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128ctr"/></c>
      <c>suit-sha256-eddsa-ecdh-a128ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-29</c>
      <c>-65534</c>
      <c>[-16,  -8, -29, -65534]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-a128ctr"/></c>
      <c>suit-sha256-es256-ecdh-a128gcm</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-7</c>
      <c>-29</c>
      <c>1</c>
      <c>[-16,  -7, -29,      1]</c>
      <c><xref target="suit-sha256-es256-ecdh-a128gcm"/></c>
      <c>suit-sha256-eddsa-ecdh-chacha-poly</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-8</c>
      <c>-29</c>
      <c>24</c>
      <c>[-16,  -8, -29,     24]</c>
      <c><xref target="suit-sha256-eddsa-ecdh-chacha-poly"/></c>
      <c>suit-sha256-hsslms-a256kw-a256ctr</c>
      <c>MANDATORY</c>
      <c>-16</c>
      <c>-46</c>
      <c>-5</c>
      <c>-65532</c>
      <c>[-16, -46,  -5, -65532]</c>
      <c><xref target="suit-sha256-hsslms-a256kw-a256ctr"/></c>
</texttable>

<t>New entries to this registry require standards action.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8152'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='July' year='2017'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8152'/>
  <seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>

<reference anchor='RFC8778'>
  <front>
    <title>Use of the HSS/LMS Hash-Based Signature Algorithm with CBOR Object Signing and Encryption (COSE)</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <date month='April' year='2020'/>
    <abstract>
      <t>This document specifies the conventions for using the Hierarchical Signature System (HSS) / Leighton-Micali Signature (LMS) hash-based signature algorithm with the CBOR Object Signing and Encryption (COSE) syntax. The HSS/LMS algorithm is one form of hash-based digital signature; it is described in RFC 8554.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8778'/>
  <seriesInfo name='DOI' value='10.17487/RFC8778'/>
</reference>

<reference anchor='RFC9052'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname='J. Schaad' initials='J.' surname='Schaad'/>
    <date month='August' year='2022'/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='96'/>
  <seriesInfo name='RFC' value='9052'/>
  <seriesInfo name='DOI' value='10.17487/RFC9052'/>
</reference>

<reference anchor='RFC9459'>
  <front>
    <title>CBOR Object Signing and Encryption (COSE): AES-CTR and AES-CBC</title>
    <author fullname='R. Housley' initials='R.' surname='Housley'/>
    <author fullname='H. Tschofenig' initials='H.' surname='Tschofenig'/>
    <date month='September' year='2023'/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) data format is designed for small code size and small message size. CBOR Object Signing and Encryption (COSE) is specified in RFC 9052 to provide basic security services using the CBOR data format. This document specifies the conventions for using AES-CTR and AES-CBC as content encryption algorithms with COSE.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='9459'/>
  <seriesInfo name='DOI' value='10.17487/RFC9459'/>
</reference>


<reference anchor='I-D.ietf-suit-manifest'>
   <front>
      <title>A Concise Binary Object Representation (CBOR)-based Serialization Format for the Software Updates for Internet of Things (SUIT) Manifest</title>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         </author>
      <author fullname='Henk Birkholz' initials='H.' surname='Birkholz'>
         <organization>Fraunhofer SIT</organization>
      </author>
      <author fullname='Koen Zandberg' initials='K.' surname='Zandberg'>
         <organization>Inria</organization>
      </author>
      <author fullname='Øyvind Rønningstad' initials='O.' surname='Rønningstad'>
         <organization>Nordic Semiconductor</organization>
      </author>
      <date day='24' month='February' year='2025'/>
      <abstract>
	 <t>   This specification describes the format of a manifest.  A manifest is
   a bundle of metadata about code/data obtained by a recipient (chiefly
   the firmware for an Internet of Things (IoT) device), where to find
   the code/data, the devices to which it applies, and cryptographic
   information protecting the manifest.  Software updates and Trusted
   Invocation both tend to use sequences of common operations, so the
   manifest encodes those sequences of operations, rather than declaring
   the metadata.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-manifest-33'/>
   
</reference>




    </references>

    <references title='Informative References'>




<reference anchor='I-D.ietf-suit-firmware-encryption'>
   <front>
      <title>Encrypted Payloads in SUIT Manifests</title>
      <author fullname='Hannes Tschofenig' initials='H.' surname='Tschofenig'>
         <organization>University of Applied Sciences Bonn-Rhein-Sieg</organization>
      </author>
      <author fullname='Russ Housley' initials='R.' surname='Housley'>
         <organization>Vigil Security, LLC</organization>
      </author>
      <author fullname='Brendan Moran' initials='B.' surname='Moran'>
         <organization>Arm Limited</organization>
      </author>
      <author fullname='David Brown' initials='D.' surname='Brown'>
         <organization>Linaro</organization>
      </author>
      <author fullname='Ken Takayama' initials='K.' surname='Takayama'>
         <organization>SECOM CO., LTD.</organization>
      </author>
      <date day='29' month='January' year='2025'/>
      <abstract>
	 <t>   This document specifies techniques for encrypting software, firmware,
   machine learning models, and personalization data by utilizing the
   IETF SUIT manifest.  Key agreement is provided by ephemeral-static
   (ES) Diffie-Hellman (DH) and AES Key Wrap (AES-KW).  ES-DH uses
   public key cryptography while AES-KW uses a pre-shared key.
   Encryption of the plaintext is accomplished with conventional
   symmetric key cryptography.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-suit-firmware-encryption-23'/>
   
</reference>


<reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/cose.xhtml">
  <front>
    <title>CBOR Object Signing and Encryption (COSE)</title>
    <author >
      <organization></organization>
    </author>
    <date year="2022"/>
  </front>
</reference>


<reference anchor='RFC8890'>
  <front>
    <title>The Internet is for End Users</title>
    <author fullname='M. Nottingham' initials='M.' surname='Nottingham'/>
    <date month='August' year='2020'/>
    <abstract>
      <t>This document explains why the IAB believes that, when there is a conflict between the interests of end users of the Internet and other parties, IETF decisions should favor end users. It also explores how the IETF can more effectively achieve this.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8890'/>
  <seriesInfo name='DOI' value='10.17487/RFC8890'/>
</reference>




    </references>


<section anchor="full-cddl"><name>A. Full CDDL</name>

<t>The following CDDL creates a subset of COSE for use with SUIT. Both tagged and untagged messages are defined. SUIT only uses tagged COSE messages, but untagged messages are also defined for use in protocols that share a ciphersuite with SUIT.</t>

<t>To be valid, the following CDDL MUST have the COSE CDDL appended to it. The COSE CDDL can be obtained by following the directions in <xref section="1.4" sectionFormat="comma" target="RFC9052"/>.</t>

<figure><sourcecode type="CDDL"><![CDATA[
SUIT_COSE_tool_tweak /= suit-sha256-hmac-a128kw-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-a128ctr
SUIT_COSE_tool_tweak /= suit-sha256-es256-ecdh-a128gcm
SUIT_COSE_tool_tweak /= suit-sha256-eddsa-ecdh-chacha-poly
SUIT_COSE_tool_tweak /= suit-sha256-hsslms-a256kw-a256ctr
SUIT_COSE_tool_tweak /= SUIT_COSE_Profiles

SUIT_COSE_Profiles /= SUIT_COSE_Profile_HMAC_A128KW_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_ES256_ECDH_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_EDDSA_ECDH_A128CTR
SUIT_COSE_Profiles /= SUIT_COSE_Profile_ES256_ECDH_A128GCM
SUIT_COSE_Profiles /= SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304
SUIT_COSE_Profiles /= SUIT_COSE_Profile_HSSLMS_A256KW_A256CTR

suit-sha256-hmac-a128kw-a128ctr    = [-16, 5, -3, -65534]
suit-sha256-es256-ecdh-a128ctr     = [-16, -7, -29, -65534]
suit-sha256-eddsa-ecdh-a128ctr     = [-16, -8, -29, -65534]
suit-sha256-es256-ecdh-a128gcm     = [-16, -7, -29, 1]
suit-sha256-eddsa-ecdh-chacha-poly = [-16, -8, -29, 24]
suit-sha256-hsslms-a256kw-a256ctr  = [-16, -46, -5, -65532]

SUIT_COSE_Profile_HMAC_A128KW_A128CTR =
    SUIT_COSE_Profile<5,-65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128CTR =
    SUIT_COSE_Profile<-7,-65534> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_A128CTR =
    SUIT_COSE_Profile<-8,-65534> .and COSE_Messages
SUIT_COSE_Profile_ES256_ECDH_A128GCM =
    SUIT_COSE_Profile<-7,1> .and COSE_Messages
SUIT_COSE_Profile_EDDSA_ECDH_CHACHA20_POLY1304 =
    SUIT_COSE_Profile<-8,24> .and COSE_Messages
SUIT_COSE_Profile_HSSLMS_A256KW_A256CTR =
    SUIT_COSE_Profile<-46,-65532> .and COSE_Messages

SUIT_COSE_Profile<authid, encid> = SUIT_COSE_Messages<authid,encid>

SUIT_COSE_Messages<authid, encid> =
    SUIT_COSE_Untagged_Message<authid, encid> /
    SUIT_COSE_Tagged_Message<authid, encid> 
      
SUIT_COSE_Untagged_Message<authid, encid> = SUIT_COSE_Sign<authid> /
    SUIT_COSE_Sign1<authid> / SUIT_COSE_Encrypt<encid> / 
    SUIT_COSE_Encrypt0<encid> / SUIT_COSE_Mac<authid> /
    SUIT_COSE_Mac0<authid> 

SUIT_COSE_Tagged_Message<authid, encid> =
    SUIT_COSE_Sign_Tagged<authid> / SUIT_COSE_Sign1_Tagged<authid> /
    SUIT_COSE_Encrypt_Tagged<encid> / SUIT_COSE_Encrypt0_Tagged<encid> /
    SUIT_COSE_Mac_Tagged<authid> / SUIT_COSE_Mac0_Tagged<authid>

; Note: This is not the same definition as is used in COSE.
; It restricts a COSE header definition further without
; repeating the COSE definition. It should be merged
; with COSE by using the CDDL .and operator.
SUIT_COSE_Profile_Headers<algid> = (
    protected : bstr .cbor SUIT_COSE_alg_map<algid>,
    unprotected : SUIT_COSE_header_map
)
SUIT_COSE_alg_map<algid> = {
    1 => algid,
    * int => any
}

SUIT_COSE_header_map = {
    * int => any
}

SUIT_COSE_Sign_Tagged<authid> = #6.98(SUIT_COSE_Sign<authid>)


SUIT_COSE_Sign<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signatures : [+ SUIT_COSE_Signature<authid>]
]


SUIT_COSE_Signature<authid> =  [
    SUIT_COSE_Profile_Headers<authid>,      
    signature : bstr
]


SUIT_COSE_Sign1_Tagged<authid> = #6.18(SUIT_COSE_Sign1<authid>)


SUIT_COSE_Sign1<authid> = [
    SUIT_COSE_Profile_Headers<authid>,
    payload : bstr / nil,
    signature : bstr
]


SUIT_COSE_Encrypt_Tagged<encid> = #6.96(SUIT_COSE_Encrypt<encid>)


SUIT_COSE_Encrypt<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_recipient<encid> = [    
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
    ? recipients : [+SUIT_COSE_recipient<encid>]
]


SUIT_COSE_Encrypt0_Tagged<encid> = #6.16(SUIT_COSE_Encrypt0<encid>)


SUIT_COSE_Encrypt0<encid> = [
    SUIT_COSE_Profile_Headers<encid>,
    ciphertext : bstr / nil,
]


SUIT_COSE_Mac_Tagged<authid> = #6.97(SUIT_COSE_Mac<authid>)


SUIT_COSE_Mac<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
   recipients :[+SUIT_COSE_recipient<authid>]
]


SUIT_COSE_Mac0_Tagged<authid> = #6.17(SUIT_COSE_Mac0<authid>)


SUIT_COSE_Mac0<authid> = [
   SUIT_COSE_Profile_Headers<authid>,      
   payload : bstr / nil,
   tag : bstr,
]
]]></sourcecode></figure>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

